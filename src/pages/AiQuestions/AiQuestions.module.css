.container {
    display: flex;
    min-height: 100vh;
}

.mainContainer {
    width: 100%;
    padding: 2rem 5%;
    color: var(--text-primary-color);
    background: var(--bg-color);
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

.mainContainer h1 {
    color: var(--text-primary-color);
    margin-bottom: 0.5rem;
    font-size: 1.8rem;
    font-weight: 700;
}

.paragraph {
    font-weight: 500;
    font-size: 0.9rem;
    text-align: justify;
    line-height: 1.6;
    color: var(--text-secondary-color);
}

/* FORMULÁRIO PADRONIZADO */
.form {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    padding-bottom: 1.5rem;
    border-bottom: 2px solid var(--border-color);
}

.inputContainer {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

.inputContainer label {
    color: var(--text-primary-color);
    font-weight: 500;
    font-size: 0.9rem;
}

.inputContainer input,
.inputContainer select {
    width: 100%;
    padding: 0.9rem 1rem;
    border: 1px solid var(--border-color);
    border-radius: 8px;
    font-size: 1rem;
    transition: all 0.3s ease;
    box-sizing: border-box;
    background-color: #fafafa;
    color: var(--text-secondary-color);
}

.inputContainer input:focus,
.inputContainer select:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 3px rgba(1, 165, 228, 0.1);
    background-color: #fff;
}

.inputContainer input::placeholder {
    color: var(--text-secondary-color);
}

.inputError {
    border-color: var(--error-color-text) !important;
}

.fieldError {
    color: var(--error-color-text);
    font-size: 0.85rem;
    margin-top: 0.4rem;
    display: block;
    animation: fadeIn 0.3s ease-out;
}

.flexContainer {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1.5rem;
}

.submitButton {
    width: 100%;
    padding: 1rem 2rem;
    background: var(--primary-color);
    color: var(--secondary-color);
    border: none;
    border-radius: 2rem;
    text-decoration: none;
    font-weight: bold;
    cursor: pointer;
    transition: 0.2s;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.4rem;
    font-size: 0.9rem;
}

.submitButton:hover:not(:disabled) {
    background: var(--primary-color-hover);
}

.submitButton:disabled {
    opacity: 0.7;
    cursor: not-allowed;
}

.submitButton.loading {
    background-color: var(--primary-color-hover);
}

.spinner {
    width: 18px;
    height: 18px;
    border: 2px solid transparent;
    border-top: 2px solid var(--secondary-color);
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

.mainError {
    background-color: var(--incorrect-bg);
    color: var(--incorrect-color);
    padding: 1rem;
    border-radius: 0.5rem;
    margin-top: 1rem;
    border-left: 4px solid var(--error-color-text);
}

.questionsMainContainer {
    margin-top: 2rem;
}

.errorContainer {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1.5rem;
    background-color: var(--incorrect-bg);
    border: 2px solid var(--error-color-text);
    border-radius: 0.5rem;
    margin-bottom: 2rem;
}

.errorContainer svg {
    color: var(--error-color-text);
}

.errorIcon {
    font-size: 2rem;
}

.errorText h3 {
    margin: 0 0 0.5rem 0;
    color: var(--error-color-text);
    font-weight: 500;
}

.errorText p {
    margin: 0;
    color: var(--text-primary-color);
}

.emptyState {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.4rem;
    padding: 3rem 1rem;
    color: var(--text-secondary-color);
}

.emptyState svg {
    font-size: 2rem;
}

@keyframes spin {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

.titleContainer {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.titleContainer h2 {
    color: var(--text-primary-color);
    font-size: 1.5rem;
    font-weight: bold;
    text-transform: capitalize;
    margin: 1rem 0;
}

.flexTitle {
    display: flex;
    align-items: center;
    gap: 1.5rem;
}

.flexTitle span {
    color: var(--text-primary-color);
    font-weight: bold;
    font-size: 1rem;
}

.difficulty {
    padding: 0.4rem 1.2rem;
    background-color: var(--shadow-color);
    font-size: 0.9rem;
    border-radius: 2rem;
    text-transform: capitalize;
}

.difficulty.Fácil {
    background-color: var(--difficulty-easy-bg);
    color: var(--difficulty-easy);
    border: 1px solid var(--difficulty-easy);
}

.difficulty.Médio {
    background-color: var(--difficulty-medium-bg);
    color: var(--difficulty-medium);
    border: 1px solid var(--difficulty-medium);
}

.difficulty.Difícil {
    background-color: var(--difficulty-hard-bg);
    color: var(--difficulty-hard);
    border: 1px solid var(--difficulty-hard);
}

.questionsContainer {
    display: flex;
    flex-direction: column;
    gap: 2.5rem;
}

.show-correct .alternative.correct {
    animation: pulseCorrect 1.5s ease-in-out;
}

@keyframes pulseCorrect {
    0% {
        background-color: var(--correct-bg);
    }
    50% {
        background-color: rgba(76, 175, 80, 0.3);
    }
    100% {
        background-color: var(--correct-bg);
    }
}

.question {
    display: flex;
    flex-direction: column;
    gap: 1.2rem;
    color: var(--text-secondary-color);
}

.question p {
    font-size: 1.1rem;
    line-height: 1.6;
}

.alternativesContainer {
    display: flex;
    flex-direction: column;
    gap: 0.2rem;
    margin-left: 0.5rem;
}

.alternative {
    display: flex;
    align-items: flex-start;
    gap: 1rem;
    cursor: pointer;
    padding: 0.8rem;
    border-radius: 0.4rem;
    transition: background-color 0.2s;
}

.alternative:hover {
    background-color: var(--shadow-color);
}

.alternative input[type="checkbox"] {
    -webkit-appearance: none;
    appearance: none;
    width: 1.2rem;
    height: 1.2rem;
    border: 2px solid var(--text-secondary-color);
    border-radius: 50%;
    margin-top: 0.2rem;
    cursor: pointer;
    flex-shrink: 0;
    transition: all 0.2s;
    position: relative;
}

.alternative input[type="checkbox"]:checked {
    background-color: var(--primary-color);
    border-color: var(--primary-color);
}

.alternative input[type="checkbox"]:checked::after {
    content: "";
    position: absolute;
    width: 0.6rem;
    height: 0.6rem;
    background-color: var(--secondary-color);
    border-radius: 50%;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.alternative .alternativeText {
    line-height: 1.6;
}

/* Estilos para verificação de respostas */
.alternative.correct {
    background-color: var(--correct-bg);
}

.alternative.correct input[type="checkbox"]:checked {
    background-color: var(--correct-color);
    border-color: var(--correct-color);
}

.alternative.incorrect {
    background-color: var(--incorrect-bg);
}

.alternative.incorrect input[type="checkbox"]:checked {
    background-color: var(--incorrect-color);
    border-color: var(--incorrect-color);
}

.alternative.verified {
    pointer-events: none;
}

.correct-marker {
    color: var(--correct-color);
    font-weight: bold;
    margin-left: 0.5rem;
    display: none;
}

.show-correct .correct-marker {
    display: inline;
}

.alternative.correct .alternativeText {
    font-weight: 600;
}

.resultsFeedback {
    background-color: rgba(1, 165, 228, 0.05);
    border-radius: 0 8px 8px 0;
    padding: 1.4rem;
    font-size: 1.1rem;
    color: var(--text-secondary-color);
    border-left: 4px solid var(--primary-color);
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.3rem;
}

.resultsFeedback p {
    color: var(--text-primary-color);
    font-weight: 500;
}

.resultsFeedback p strong,
.resultMsg {
    color: var(--primary-color);
    font-weight: bold;
}

.divider {
    height: 2px;
    background-color: var(--border-color);
    border: none;
    margin-top: 2rem;
}

.noQuestions {
    color: var(--text-secondary-color);
    text-align: center;
}

/* Animações */
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(-5px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@media (max-width: 768px) {
    .flexContainer {
        grid-template-columns: 1fr;
    }

    .mainContainer {
        padding: 1.5rem;
    }

    .inputContainer input,
    .inputContainer select {
        padding: 0.8rem;
    }
}
